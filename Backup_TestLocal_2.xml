<channel version="4.3.0">
  <id>756fd27f-2308-4293-95d0-c7f223368208</id>
  <nextMetaDataId>4</nextMetaDataId>
  <name>Test Local Server</name>
  <description></description>
  <revision>1</revision>
  <sourceConnector version="4.3.0">
    <metaDataId>0</metaDataId>
    <name>sourceConnector</name>
    <properties class="com.mirth.connect.connectors.http.HttpReceiverProperties" version="4.3.0">
      <pluginProperties>
        <com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties version="4.3.0">
  <authType>NONE</authType>
        </com.mirth.connect.plugins.httpauth.NoneHttpAuthProperties>
      </pluginProperties>
      <listenerConnectorProperties version="4.3.0">
        <host>0.0.0.0</host>
        <port>8091</port>
      </listenerConnectorProperties>
      <sourceConnectorProperties version="4.3.0">
        <responseVariable>Postprocessor</responseVariable>
        <respondAfterProcessing>true</respondAfterProcessing>
        <processBatch>false</processBatch>
        <firstResponse>false</firstResponse>
        <processingThreads>1</processingThreads>
        <resourceIds class="linked-hash-map">
          <entry>
            <string>Default Resource</string>
            <string>[Default Resource]</string>
          </entry>
        </resourceIds>
        <queueBufferSize>1000</queueBufferSize>
      </sourceConnectorProperties>
      <xmlBody>false</xmlBody>
      <parseMultipart>true</parseMultipart>
      <includeMetadata>false</includeMetadata>
      <binaryMimeTypes>application/.*(?&lt;!json|xml)$|image/.*|video/.*|audio/.*</binaryMimeTypes>
      <binaryMimeTypesRegex>true</binaryMimeTypesRegex>
      <responseContentType>application/json</responseContentType>
      <responseDataTypeBinary>false</responseDataTypeBinary>
      <responseStatusCode>200</responseStatusCode>
      <responseHeaders class="linked-hash-map"/>
      <responseHeadersVariable></responseHeadersVariable>
      <useResponseHeadersVariable>false</useResponseHeadersVariable>
      <charset>UTF-8</charset>
      <contextPath></contextPath>
      <timeout>30000</timeout>
      <staticResources/>
    </properties>
    <transformer version="4.3.0">
      <elements>
        <com.mirth.connect.plugins.javascriptstep.JavaScriptStep version="4.3.0">
          <name>Route</name>
          <sequenceNumber>0</sequenceNumber>
          <enabled>true</enabled>
          <script>var method = sourceMap.get(&apos;method&apos;); 
//logger.info(&quot;Test method: &quot;+method);/

var contextPath = sourceMap.get(&apos;contextPath&apos;);
//logger.info(&quot;Test contextPath: &quot;+contextPath);/

var uri = sourceMap.get(&apos;uri&apos;); 
//logger.info(&quot;Test uri: &quot;+uri);/

var destinationID; 

switch(String(contextPath)) { 
	case &apos;/auth/tokenForApiKey&apos;: destinationID = 1; 
	break; 
	case &apos;/api/services/service&apos;: destinationID = 2;
	break;
	case &apos;/api/locations/location&apos;: destinationID = 2;
	break;
	default: destinationID = 3;   
} 
//logger.info(&quot;Test destinationID: &quot;+destinationID);/
destinationSet.removeAllExcept(destinationID);</script>
        </com.mirth.connect.plugins.javascriptstep.JavaScriptStep>
      </elements>
      <inboundTemplate encoding="base64"></inboundTemplate>
      <outboundTemplate encoding="base64"></outboundTemplate>
      <inboundDataType>RAW</inboundDataType>
      <outboundDataType>RAW</outboundDataType>
      <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.3.0">
        <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.3.0">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </inboundProperties>
      <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.3.0">
        <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.3.0">
          <splitType>JavaScript</splitType>
          <batchScript></batchScript>
        </batchProperties>
      </outboundProperties>
    </transformer>
    <filter version="4.3.0">
      <elements/>
    </filter>
    <transportName>HTTP Listener</transportName>
    <mode>SOURCE</mode>
    <enabled>true</enabled>
    <waitForPrevious>true</waitForPrevious>
  </sourceConnector>
  <destinationConnectors>
    <connector version="4.3.0">
      <metaDataId>1</metaDataId>
      <name>Refresh Token</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="4.3.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.3.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>var responseData = &apos;{&quot;token&quot;:&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE1Njg5OTUwNDUsImV4cCI6MTU2ODk5ODY0NSwiaXNzIjoiaW50ZWdyYXRpb25zIiwianRpIjoiOTM0MWVlY2ItNGRlYi00ZWU2LWI1ZjUtNTY1N2U5ZDBhNWNhIn0.TOtGHNZ9-b9GfDUoQ4czw8c3GmeGQvINrDvBElwOe9A&quot;,&quot;expiresIn&quot;: &quot;1h&quot;}&apos;
return ResponseFactory.getSentResponse( responseData);</script>
      </properties>
      <transformer version="4.3.0">
        <elements/>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.3.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.3.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.3.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.3.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.3.0">
        <elements/>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.3.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.3.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.3.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.3.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.3.0">
        <elements/>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="4.3.0">
      <metaDataId>2</metaDataId>
      <name>Add location or service</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="4.3.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.3.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>//var responseData = &apos;{&quot;success&quot;: 1,&quot;locations&quot;: 2,&quot;services&quot;: 2,&quot;locationTags&quot;: 2,&quot;serviceTags&quot;: 2,&quot;time&quot;: 1.7110071182251,&quot;maxMemoryUsage&quot;: 335}&apos;;
var responseData =&apos;{  &quot;status&quot; : 0,  &quot;id&quot; : 1312,  &quot;importId&quot; : null,  &quot;left&quot; : 786974,  &quot;level&quot; : 1,  &quot;right&quot; : 786975,  &quot;root&quot; : 1,  &quot;path&quot; : [    {      &quot;id&quot; : 1,      &quot;title&quot; : &quot;LOCATIONS.LOCATION_ROOT&quot;,      &quot;left&quot; : 1,      &quot;right&quot; : 786976    },    {      &quot;id&quot; : 1312,      &quot;title&quot; : &quot;PLACEHOLDER.f75c694c-9185-4092-b2ee-947007f0de1a&quot;,      &quot;left&quot; : 786974,      &quot;right&quot; : 786975    }  ],  &quot;title&quot; : {    &quot;placeholder&quot; : &quot;PLACEHOLDER.f75c694c-9185-4092-b2ee-947007f0de1a&quot;,    &quot;pointer&quot; : null,    &quot;translations&quot; : [      {        &quot;language&quot; : {          &quot;code&quot; : &quot;en_GB&quot;,          &quot;name&quot; : &quot;LANGUAGE.LABEL.EN&quot;,          &quot;canonicalName&quot; : &quot;English (United Kingdom)&quot;,          &quot;dir&quot; : &quot;ltr&quot;,          &quot;princeCode&quot; : &quot;en_GB&quot;,          &quot;id&quot; : 1,          &quot;currentVersion&quot; : 1        },        &quot;value&quot; : &quot;L1&quot;,        &quot;id&quot; : 28635,        &quot;currentVersion&quot; : 1      }    ],    &quot;type&quot; : 1,    &quot;id&quot; : 10290,    &quot;currentVersion&quot; : 1  },  &quot;tags&quot; : [ ],  &quot;parent&quot; : {    &quot;parent&quot; : null,    &quot;status&quot; : 0,    &quot;id&quot; : 1,    &quot;currentVersion&quot; : 1,    &quot;importId&quot; : null,    &quot;left&quot; : 1,    &quot;level&quot; : 0,    &quot;right&quot; : 786976,    &quot;root&quot; : 1,    &quot;path&quot; : [      {        &quot;id&quot; : 1,        &quot;left&quot; : 1,        &quot;right&quot; : 786902,        &quot;title&quot; : &quot;LOCATIONS.LOCATION_ROOT&quot;      }    ],    &quot;title&quot; : {      &quot;placeholder&quot; : &quot;LOCATIONS.LOCATION_ROOT&quot;,      &quot;pointer&quot; : null,      &quot;translations&quot; : [        {          &quot;value&quot; : &quot;Locations&quot;,          &quot;id&quot; : 4287,          &quot;currentVersion&quot; : 4        },        {          &quot;value&quot; : &quot;Locations&quot;,          &quot;id&quot; : 18266,          &quot;currentVersion&quot; : 1        },        {          &quot;value&quot; : &quot;Emplacements&quot;,          &quot;id&quot; : 21281,          &quot;currentVersion&quot; : 1        }      ],      &quot;type&quot; : 0,      &quot;id&quot; : 363,      &quot;currentVersion&quot; : 1    }  },  &quot;children&quot; : { },  &quot;serviceDrafts&quot; : null,  &quot;idNumberTypes&quot; : [ ],  &quot;draft&quot; : null,  &quot;benchmarkProfiles&quot; : { },  &quot;_embedded&quot; : {    &quot;services&quot; : [ ]  },  &quot;_links&quot; : {    &quot;self&quot; : {      &quot;href&quot; : &quot;https://integrations.private.staging.cloudiq.co.uk/api/v1/locations/location/1312&quot;    }  }}&apos;
return ResponseFactory.getSentResponse( responseData);</script>
      </properties>
      <transformer version="4.3.0">
        <elements/>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.3.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.3.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.3.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.3.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.3.0">
        <elements/>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.3.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.3.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.3.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.3.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.3.0">
        <elements/>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
    <connector version="4.3.0">
      <metaDataId>3</metaDataId>
      <name>Default</name>
      <properties class="com.mirth.connect.connectors.js.JavaScriptDispatcherProperties" version="4.3.0">
        <pluginProperties/>
        <destinationConnectorProperties version="4.3.0">
          <queueEnabled>false</queueEnabled>
          <sendFirst>false</sendFirst>
          <retryIntervalMillis>10000</retryIntervalMillis>
          <regenerateTemplate>false</regenerateTemplate>
          <retryCount>0</retryCount>
          <rotate>false</rotate>
          <includeFilterTransformer>false</includeFilterTransformer>
          <threadCount>1</threadCount>
          <threadAssignmentVariable></threadAssignmentVariable>
          <validateResponse>false</validateResponse>
          <resourceIds class="linked-hash-map">
            <entry>
              <string>Default Resource</string>
              <string>[Default Resource]</string>
            </entry>
          </resourceIds>
          <queueBufferSize>1000</queueBufferSize>
          <reattachAttachments>true</reattachAttachments>
        </destinationConnectorProperties>
        <script>var responseData = &apos;{&quot;Test Message&quot;: &quot;OK&quot;}&apos;;
return ResponseFactory.getSentResponse( responseData);</script>
      </properties>
      <transformer version="4.3.0">
        <elements/>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.3.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.3.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.3.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.3.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </transformer>
      <responseTransformer version="4.3.0">
        <elements/>
        <inboundDataType>RAW</inboundDataType>
        <outboundDataType>RAW</outboundDataType>
        <inboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.3.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.3.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </inboundProperties>
        <outboundProperties class="com.mirth.connect.plugins.datatypes.raw.RawDataTypeProperties" version="4.3.0">
          <batchProperties class="com.mirth.connect.plugins.datatypes.raw.RawBatchProperties" version="4.3.0">
            <splitType>JavaScript</splitType>
            <batchScript></batchScript>
          </batchProperties>
        </outboundProperties>
      </responseTransformer>
      <filter version="4.3.0">
        <elements/>
      </filter>
      <transportName>JavaScript Writer</transportName>
      <mode>DESTINATION</mode>
      <enabled>true</enabled>
      <waitForPrevious>true</waitForPrevious>
    </connector>
  </destinationConnectors>
  <preprocessingScript>// Modify the message variable below to pre process data
return message;</preprocessingScript>
  <postprocessingScript>// This script executes once after a message has been processed
// Responses returned from here will be stored as &quot;Postprocessor&quot; in the response map
var destinations = sourceMap.get(&apos;destinationSet&apos;);
var metadataIds = destinations.toArray();

if (metadataIds.length == 0) {
	return ResponseFactory.getErrorResponse(&apos;invalid request&apos;);
}

var smsg = message.getConnectorMessages().get(0);
if (smsg.getStatus() == &apos;ERROR&apos;) {
	return smsg;
}

var metadataID = metadataIds[0];
var cmsg = message.getConnectorMessages().get(metadataID);

if (cmsg.getStatus() == &apos;ERROR&apos;) {
	return JSON.stringify(&apos;{&quot;message&quot;: &quot;Internal Server error&quot;}&apos;);
}

return cmsg.getResponseData();</postprocessingScript>
  <deployScript>// This script executes once when the channel is deployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</deployScript>
  <undeployScript>// This script executes once when the channel is undeployed
// You only have access to the globalMap and globalChannelMap here to persist data
return;</undeployScript>
  <properties version="4.3.0">
    <clearGlobalChannelMap>false</clearGlobalChannelMap>
    <messageStorageMode>DEVELOPMENT</messageStorageMode>
    <encryptData>false</encryptData>
    <encryptAttachments>false</encryptAttachments>
    <encryptCustomMetaData>false</encryptCustomMetaData>
    <removeContentOnCompletion>false</removeContentOnCompletion>
    <removeOnlyFilteredOnCompletion>false</removeOnlyFilteredOnCompletion>
    <removeAttachmentsOnCompletion>false</removeAttachmentsOnCompletion>
    <initialState>STARTED</initialState>
    <storeAttachments>true</storeAttachments>
    <metaDataColumns>
      <metaDataColumn>
        <name>SOURCE</name>
        <type>STRING</type>
        <mappingName>mirth_source</mappingName>
      </metaDataColumn>
      <metaDataColumn>
        <name>TYPE</name>
        <type>STRING</type>
        <mappingName>mirth_type</mappingName>
      </metaDataColumn>
    </metaDataColumns>
    <attachmentProperties version="4.3.0">
      <type>None</type>
      <properties/>
    </attachmentProperties>
    <resourceIds class="linked-hash-map">
      <entry>
        <string>Default Resource</string>
        <string>[Default Resource]</string>
      </entry>
    </resourceIds>
  </properties>
  <exportData>
    <metadata>
      <enabled>true</enabled>
      <lastModified>
        <time>1687885278990</time>
        <timezone>Asia/Calcutta</timezone>
      </lastModified>
    </metadata>
    <codeTemplateLibraries>
      <codeTemplateLibrary version="4.3.0">
        <id>7f90423c-72e2-4e64-81dc-2b4f03116991</id>
        <name>Library 1</name>
        <revision>1</revision>
        <lastModified>
          <time>1686303085092</time>
          <timezone>Asia/Calcutta</timezone>
        </lastModified>
        <description>This library was added upon migration to version 3.3.0. It includes all pre-existing
code templates, and is set to be included on all pre-existing and new channels.

You should create your own new libraries and assign code templates to them as you
see fit. You should also link libraries to specific channels, so that you&apos;re not
necessarily including all code templates on all channels all the time.</description>
        <includeNewChannels>true</includeNewChannels>
        <enabledChannelIds>
          <string>fff5e89a-36cf-45b9-9a3d-e0bca4160901</string>
          <string>1c2b8888-36ce-4931-b5eb-29c545382288</string>
          <string>69c93bdc-a402-4dc3-b4b5-9a1aff744d58</string>
          <string>d70a7933-0aa2-4073-b0eb-ca3f02d1fec9</string>
          <string>3a799fbd-2230-4b55-b0c9-e988ab49ebcf</string>
          <string>445f580c-b05f-475f-a3b3-31405ace917f</string>
          <string>2c5018a2-0475-4fe8-b9fc-9224f0aba54e</string>
          <string>d02e9fa4-eeaf-4426-b081-7394ef6c0a3c</string>
          <string>19a241a1-c04b-4b15-857f-9f3de3270cde</string>
          <string>d025cf84-b5f7-4a31-a094-6015a1efedc5</string>
          <string>5fe9cd09-8e65-40fe-8667-08542822de87</string>
          <string>67769b5f-bf77-4789-b740-c27c0c8f7dcf</string>
          <string>907b5c14-c869-434b-bd2d-08228e434154</string>
          <string>97852591-4789-470e-9072-a2b8b1c9bfa8</string>
          <string>241b59a4-6819-4582-965f-7cd21c14a17e</string>
          <string>82a62e66-f5fd-4914-ae8c-4a08b22e4ec3</string>
          <string>705ad42d-04d5-432f-a56d-92d18191db67</string>
          <string>1115c01b-d4cd-4ea7-bf5a-9ffbd515695e</string>
          <string>a5953b6a-2fc1-4789-a8f1-2cdb5706ba71</string>
          <string>7bd69110-312a-4718-9d2b-71a932be00fe</string>
          <string>4caf9912-5028-4a88-946f-19713b2049d3</string>
          <string>4b393dc5-003d-4cd6-b84c-71fb3b0d532e</string>
          <string>1dbeeefc-f6f9-4937-aec9-6a6f76190bee</string>
          <string>c5b56cce-1b3c-46cd-82eb-b99458ac1e03</string>
          <string>373bf4a4-5cae-4f7d-bbca-d7c2b73e27f1</string>
          <string>1969d4eb-86cb-4c1b-b073-5e65f18285e6</string>
          <string>0e41576e-04b5-410d-8306-5e1558dbb7a2</string>
          <string>e31c9276-369d-4988-828b-fd455f506abd</string>
          <string>98b5ddd0-bb9c-4d91-944c-c19e9b251236</string>
          <string>d5e3e41e-70f3-49f4-b29c-abddd378fa92</string>
          <string>c72e44d0-95e6-4949-a9aa-9f0e959f593b</string>
          <string>167c5066-cb7a-4463-b4df-87e19d476f40</string>
          <string>9061d0df-f783-4b6b-bfbc-0625b53343d6</string>
          <string>ca282c46-c3f1-4cd2-83f4-71c614c35c8d</string>
          <string>5bd9c986-cc94-4062-be72-bba07efe27d4</string>
          <string>e0059099-5e99-4040-a27f-f15b879e5227</string>
          <string>e544e1a5-358e-435a-a2ea-af7c848abdc4</string>
          <string>cbf3da50-25ce-4a15-b871-1020a0230e76</string>
          <string>f58c3a86-6031-4172-99cf-4099ee4bd40c</string>
          <string>00fc3a98-4462-40b2-8e27-e2defa101afe</string>
          <string>50ac73be-c5a5-4e0b-8401-237aa21454de</string>
          <string>325fd027-86d6-4057-a0b5-6e69e8eefa80</string>
          <string>0204e7db-495d-42fb-8121-b18ab4a8c1a4</string>
          <string>94593bf0-bd23-4541-892e-92a5946d8859</string>
          <string>2bc81c95-03d2-4afd-959a-dda2a6b35073</string>
          <string>006822e5-653f-4898-8a3a-874e9b48bed6</string>
          <string>0a7e5b9e-00b5-42a5-a37c-e99f1aafe3a2</string>
          <string>875a1ce7-b2d0-4b45-83c3-27cefd6dad87</string>
          <string>393f3c37-ea4d-4e6a-ae36-8f5f8b94d205</string>
          <string>c3952f69-de32-469f-9931-f67123412323</string>
          <string>6c26453d-ffdd-4eea-84da-e695f824dfb6</string>
          <string>42836029-df31-49bb-a9ce-7151260f1741</string>
          <string>e00c1ca4-a5a2-47ca-af7b-90d6f23153d3</string>
          <string>360af733-1804-45c7-b9fb-3904b5bdea49</string>
          <string>9c6b643d-dd8b-4a43-aa8e-12e0c681beb0</string>
          <string>cd033600-4b41-42c6-a9d9-9b45bcb390b8</string>
          <string>ece06503-016f-4663-913c-51de5e633217</string>
          <string>b0f8ffa7-ccf5-41e9-a890-009c71e2a22f</string>
          <string>df28ca0b-8f99-4817-9183-eec12d4c33d2</string>
          <string>3715b118-4f09-4b78-8fcd-8b3dc4f52316</string>
          <string>1d2ac086-d6a5-4a43-b6ea-d68a580c3d2f</string>
          <string>170627d0-abb3-4d14-9539-eae5e9289ac6</string>
          <string>c961df51-814b-4c7c-bb8c-dc10363e0168</string>
          <string>8eb93425-dae0-4d67-937c-8803ae959e4d</string>
          <string>6ae3421c-0844-485c-a403-5a527c79cb42</string>
          <string>cda23b2f-4d5f-4e5c-961b-4a2610a36397</string>
          <string>ef2a44f4-f0a0-4a52-be96-ad66e5b7b841</string>
          <string>4b6556ad-7f87-42cc-8702-0654bbdc01a4</string>
          <string>cd8f182f-40c4-4de8-9c08-86a4106715b1</string>
          <string>52890d51-4597-4527-ba0b-e61b254690a8</string>
          <string>31f85404-ea85-4f59-a4a8-ab3ec21d3d57</string>
          <string>4babcec7-f214-44e5-802c-493d85533b25</string>
          <string>e36fa944-3c5a-4ae9-a0e7-7f36cdda5a54</string>
          <string>0b667947-5c8d-400f-a9fe-524c529928ae</string>
          <string>92735dcf-db39-483e-98b4-ad653d99d808</string>
          <string>f833c647-12df-451b-9154-0bf91b6064d8</string>
          <string>0715594f-bcdb-446f-98b2-86645276c331</string>
          <string>11828709-1e83-4112-83ab-5fbd6022e8fa</string>
          <string>e77a4378-0abd-449b-9a07-1516e06e471d</string>
        </enabledChannelIds>
        <disabledChannelIds/>
        <codeTemplates>
          <codeTemplate version="4.3.0">
            <id>fb35c2ae-a796-4dd2-888e-386155b66c79</id>
            <name>getPhoneDetailByEquipmentType</name>
            <revision>1</revision>
            <lastModified>
              <time>1686303085218</time>
              <timezone>Asia/Calcutta</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>CHANNEL_PREPROCESSOR</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>CHANNEL_ATTACHMENT</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
                <contextType>CHANNEL_BATCH</contextType>
                <contextType>CHANNEL_DEPLOY</contextType>
                <contextType>GLOBAL_POSTPROCESSOR</contextType>
                <contextType>CHANNEL_POSTPROCESSOR</contextType>
                <contextType>CHANNEL_UNDEPLOY</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
  Find identifier from the  list of  phone numbers and return the value based  on  Equipment Type

	@param {String} equipmentType 	- 	PID.13.3 Telecommunication Equipment Type
	@param {String} loggingPrefix 	- 	String to put at from o logging for  clarity
	@return {String} identified value from PID-13
	
*/

function getPhoneDetailByEquipmentType(equipmentTypeToFind,loggingPrefix) {

const EQUIPMENT_TYPE_PHONE = &apos;CP PH&apos;;
const EQUIPMENT_TYPE_EMAIL = &apos;INTERNET&apos;;

//logger.debug(loggingPrefix + &apos;Received equipmentTypeToFind:[&apos; + equipmentTypeToFind + &apos;]&apos;  );
//logger.info(loggingPrefix + &apos;PID-13:[&apos; + msg[&apos;PID&apos;][&apos;PID.3&apos;].toString() + &apos;]&apos;);

var returnPhone = &apos;&apos;;
	for each (pid13 in msg[&apos;PID&apos;][&apos;PID.13&apos;]) {
		var equipmentType = pid13[&apos;PID.13.3&apos;].toString().toUpperCase() + &apos;&apos;;
//		logger.info(loggingPrefix + &apos;Got Eqpt Type:[&apos; + equipmentType + &apos;]&apos; );
		if (equipmentType.toUpperCase() == equipmentTypeToFind.toUpperCase()) { 
			//logger.debug(loggingPrefix + &apos;Matched Eqpt Type.&apos;);
			if (EQUIPMENT_TYPE_PHONE.indexOf(equipmentType.toUpperCase()) &gt; -1 ){
				//returning phone number  for these types
				logger.info(loggingPrefix + &apos;Got Phone Type.&apos;);
				returnPhone = pid13[&apos;PID.13.6&apos;].toString()+&apos; &apos;+pid13[&apos;PID.13.7&apos;].toString()+&apos;&apos;;
			}else if(equipmentType.toUpperCase() == EQUIPMENT_TYPE_EMAIL) {
				//returning email address for this type type
				logger.info(loggingPrefix + &apos;Got email  Type.&apos;);
				returnPhone = pid13[&apos;PID.13.4&apos;].toString()+&apos;&apos;;
			}
		break;
		}
	}
//logger.debug(loggingPrefix + &apos;Returning:[&apos; + returnPhone + &apos;]&apos;  );

return returnPhone;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.3.0">
            <id>8a3850b7-c772-49e1-9354-8f273cdaefba</id>
            <name>getPID3IdentifierByNamespaceID</name>
            <revision>1</revision>
            <lastModified>
              <time>1686303085147</time>
              <timezone>Asia/Calcutta</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Return the  valied identified in the PID 3  from the namespace ID

	@param {String} namespaceID 	- 	PID.3-4.1 Assigning Authority namespace ID
	@param {String} loggingPrefix - 	String to put at from o logging for  clarity
	@return {String} identified value from PID-3.1 
	
*/

function getPID3IdentifierByNamespaceID(namespaceID,loggingPrefix) {

/*
  Find identifier from the patient Identifier list and  map it to return 
*/
	logger.info(loggingPrefix + &apos;Received NamespaceID:[&apos; + namespaceID + &apos;]&apos;  );
	//logger.info(loggingPrefix + &apos;PID-3:[&apos; + msg[&apos;PID&apos;][&apos;PID.3&apos;].toString() + &apos;]&apos;);

var identifiedPID3 = &apos;&apos;;
	for each (pid3 in msg[&apos;PID&apos;][&apos;PID.3&apos;]) {
	//	logger.info(loggingPrefix + &quot;Got PID3 ID:[&quot; + pid3[&apos;PID.3.1&apos;].toString() + &quot;,Namespace:[&quot; + pid3[&apos;PID.3.4&apos;].toString() +&quot;]&quot;);
		var pidNamespaceID = pid3[&apos;PID.3.4&apos;].toString() + &apos;&apos;;
		
		if (pidNamespaceID == namespaceID) { 
			identifiedPID3 = pid3[&apos;PID.3.1&apos;].toString();
	//		logger.info(&quot;Got Value for:[&quot; + namespaceID + &quot;],[&quot; + identifiedPID3 + &quot;]&quot;);
		}
	}

return identifiedPID3;

}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.3.0">
            <id>2b01a807-b091-4ff8-81c1-cddb5550075a</id>
            <name>padZeros</name>
            <revision>1</revision>
            <lastModified>
              <time>1686303085108</time>
              <timezone>Asia/Calcutta</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/**
	Modify the description here. Modify the function name and parameters as needed. One function per
	template is recommended; create a new code template for each new function.

	@param {String} arg1 - arg1 description
	@return {String} return description
*/
function padZeros(str, max) {
	return str.length &lt; max ? padZeros(&quot;0&quot; + str, max): str;
}</code>
            </properties>
          </codeTemplate>
          <codeTemplate version="4.3.0">
            <id>41cf5d30-5249-4238-ba4d-20f9b1384aaf</id>
            <name>validatePhoneNumber</name>
            <revision>1</revision>
            <lastModified>
              <time>1686303085181</time>
              <timezone>Asia/Calcutta</timezone>
            </lastModified>
            <contextSet>
              <delegate>
                <contextType>DESTINATION_FILTER_TRANSFORMER</contextType>
                <contextType>DESTINATION_RESPONSE_TRANSFORMER</contextType>
                <contextType>DESTINATION_DISPATCHER</contextType>
                <contextType>SOURCE_FILTER_TRANSFORMER</contextType>
                <contextType>SOURCE_RECEIVER</contextType>
              </delegate>
            </contextSet>
            <properties class="com.mirth.connect.model.codetemplates.BasicCodeTemplateProperties">
              <type>FUNCTION</type>
              <code>/*
Function to vlaidate a phone number.

Validation fails  if argument contains other than numerics or length &gt; 20

If Validation fails function returns &apos;&apos;


*/

function validatePhoneNumber(noToValidate){
var returnNo = &apos;&apos;
var phoneNumberValid = true;
var maxLength = 20;
var reForNoNumerics = new RegExp(/\D/); 
var numberSpacesStripped = noToValidate.replace(&apos; &apos;,&apos;&apos;);

logger.info(&apos;Validating Phone Number:[&apos; + noToValidate + &apos;]&apos;);

/*	if (reForNoNumerics.test(numberSpacesStripped)){
		logger.info(&apos;Validating Phone Number:FAIL:Non Numerics Present&apos;);
		phoneNumberValid = false;
	}
*/
	if (noToValidate.length &gt; maxLength ){
		logger.info(&apos;Validating Phone Number:FAIL:Max Length(&apos;+ maxLength + &apos;) Exceeded&apos;);
		phoneNumberValid = false;
	}

	if (phoneNumberValid){
		returnNo = noToValidate;
	}else{
		returnNo = &apos;&apos;;
	}

	return returnNo;
}</code>
            </properties>
          </codeTemplate>
        </codeTemplates>
      </codeTemplateLibrary>
      <codeTemplateLibrary version="4.3.0">
        <id>8eae3236-3da1-488e-9cbd-ce2fb398f95e</id>
        <name>Library 2</name>
        <revision>1</revision>
        <lastModified>
          <time>1686303085097</time>
          <timezone>Asia/Calcutta</timezone>
        </lastModified>
        <description>This library was added upon migration to version 3.3.0. It includes all pre-existing
code templates, and is set to be included on all pre-existing and new channels.

You should create your own new libraries and assign code templates to them as you
see fit. You should also link libraries to specific channels, so that you&apos;re not
necessarily including all code templates on all channels all the time.</description>
        <includeNewChannels>true</includeNewChannels>
        <enabledChannelIds>
          <string>fff5e89a-36cf-45b9-9a3d-e0bca4160901</string>
          <string>5bd9c986-cc94-4062-be72-bba07efe27d4</string>
          <string>c78f405c-3dc9-4051-920e-61e53c0e85ca</string>
          <string>3a799fbd-2230-4b55-b0c9-e988ab49ebcf</string>
          <string>7bd69110-312a-4718-9d2b-71a932be00fe</string>
          <string>cd8f182f-40c4-4de8-9c08-86a4106715b1</string>
          <string>845ae5a2-84c3-4b04-a58d-3e875d730c4d</string>
          <string>073fb539-3456-404b-a511-9a495f62e53e</string>
          <string>f8578a58-965d-4397-8c97-aea4f6a93fba</string>
          <string>0e41576e-04b5-410d-8306-5e1558dbb7a2</string>
          <string>2d2344b6-4682-435e-a42f-43a8a46acb33</string>
          <string>e31c9276-369d-4988-828b-fd455f506abd</string>
          <string>6c26453d-ffdd-4eea-84da-e695f824dfb6</string>
          <string>e00c1ca4-a5a2-47ca-af7b-90d6f23153d3</string>
          <string>4264fed3-9b46-4868-a1bf-92c6c641aba2</string>
        </enabledChannelIds>
        <disabledChannelIds/>
        <codeTemplates/>
      </codeTemplateLibrary>
    </codeTemplateLibraries>
  </exportData>
</channel>